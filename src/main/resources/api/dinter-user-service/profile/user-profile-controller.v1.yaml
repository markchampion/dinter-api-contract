openapi: 3.0.0
info:
  title: Dinter User Profile Management API
  version: 1.0.0
  contact:
    name: User Profile Management API Support
tags:
  - name: UserProfile
    description: Operations related to UserProfile object.
servers:
  - url: http://{camHost}/v1
    variables:
      camHost:
        default: localhost
        description: Service host for exposing the service to internal services.

paths:
  /profiles:
    get:
      summary: GET v1/users/profile
      operationId: getUsersProfiles
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: Users found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfile'
        400:
          description: 'Users profile not found'
          content:
            application/json:
              schema:
                $ref: '../schema/shared.yaml#/components/schemas/ApiResponse'
  /profiles/{userId}:
    get:
        summary: GET v1/users/profile/{userId}
        operationId: getUserProfile
        parameters:
            - name: userId
              in: path
              description: User id to get user profile
              required: true
              schema:
                  type: string
        responses:
            200:
              description: User profile found
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UserProfile'
            400:
              description: 'User profile not found'
              content:
                  application/json:
                    schema:
                        $ref: '../schema/shared.yaml#/components/schemas/ApiResponse'
    put:
      summary: PUT v1/users/profile
      operationId: updateUserProfile
      parameters:
        - name: userId
          in: path
          description: User id to get user profile
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
        required: true
      responses:
        200:
          description: User profile updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        400:
          description: 'User profile not found'
          content:
            application/json:
              schema:
                $ref: '../schema/shared.yaml#/components/schemas/ApiResponse'
  /profiles/preferences/{userId}:
    get:
      summary: GET v1/users/preferences
      operationId: getUsersPreferences
      parameters:
        - name: userId
          in: path
          description: User id to get user profile
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
        required: true
      responses:
        200:
          description: Users preferences found
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserPreference'
        400:
          description: 'Users preferences not found'
          content:
            application/json:
              schema:
                $ref: '../schema/shared.yaml#/components/schemas/ApiResponse'
    put:
        summary: PUT v1/users/preferences
        operationId: updateUserPreferences
        parameters:
          - name: userId
            in: path
            description: User id to get user profile
            required: true
            schema:
              type: string
        requestBody:
            content:
              application/json:
                  schema:
                    $ref: '#/components/schemas/UserPreference'
            required: true
        responses:
            200:
              description: User preferences updated
              content:
                  application/json:
                    schema:
                        $ref: '#/components/schemas/UserPreference'
            400:
              description: 'User preferences not found'
              content:
                  application/json:
                    schema:
                        $ref: '../schema/shared.yaml#/components/schemas/ApiResponse'

components:
  schemas:
    UserProfile:
      type: object
      properties:
        userId:
          type: string
        avatarImageUrl:
          type: string
        displayName:
          type: string
          maxLength: 255
        birthDate:
          type: string
          format: date-time
        gender:
          type: boolean
        education:
          type: string
          maxLength: 255
        jobTitle:
          type: string
          maxLength: 255
        companyName:
          type: string
          maxLength: 255
        about:
          type: string
          maxLength: 1024
    UserPreference:
        type: object
        properties:
          userId:
            type: string
          gender:
            type: boolean
          distance:
            type: integer
          ageFrom:
            type: integer
            minimum:  18
            maximum: 100
          ageTo:
            type: integer
          createdDate:
            type: string
            format: date-time
          updatedDate:
            type: string
            format: date-time



