openapi: 3.0.0
info:
  title: Dinter User Matching API
  version: 0.0.1
  contact:
    name: User Matching API Support
tags:
  - name: Matching
    description: Operations related to send add request to another users.
servers:
  - url: http://{camHost}/v1
    variables:
      camHost:
        default: localhost
        description: Service host for exposing the service to internal services.

paths:
  /matching/{userId}:
    get:
      summary: GET v1/matching/{userId}
      operationId: getMatchingRequests
      parameters:
        - name: userId
          in: path
          description: User id to get matching requests
          required: true
          schema:
              type: string
      responses:
        200:
          description: Matching requests found
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/MatchingRequest'
        400:
          description: 'Matching requests not found'
          content:
            application/json:
              schema:
                $ref: '../../common/error.yaml#/components/schemas/ErrorResponse'
  /matching/send:
    post:
      summary: POST v1/matching/send
      operationId: sendMatchingRequest
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MatchingRequest'
        required: true
      responses:
        204:
          description: Match request sent
        400:
          description: 'Invalid payload data'
          content:
            application/json:
              schema:
                $ref: '../../common/error.yaml#/components/schemas/ErrorResponse'
  /matching/{matchingId}/accept:
    put:
      summary: PUT v1/matching/{matchingId}/accept
      operationId: acceptMatchingRequest
      parameters:
        - name: matchingId
          in: path
          description: Matching request id to accept
          required: true
          schema:
            type: string
      responses:
        204:
          description: Match request accepted
        400:
          description: Matching request not found or has been accepted
          content:
            application/json:
              schema:
                $ref: '../../common/error.yaml#/components/schemas/ErrorResponse'
  /matching/{matchingId}/reject:
    put:
      summary: PUT v1/matching/{matchingId}/reject
      operationId: rejectMatchingRequest
      parameters:
        - name: matchingId
          in: path
          description: Matching request id to reject
          required: true
          schema:
            type: string
      responses:
        204:
          description: Match request rejected
        400:
          description: Matching request not found or has been rejected
          content:
            application/json:
              schema:
                $ref: '../../common/error.yaml#/components/schemas/ErrorResponse'


components:
  schemas:
    MatchingRequest:
      type: object
      properties:
        id:
          type: string
        senderId:
          type: string
        receiverId:
          type: string
        requestType:
          type: string
          enum:
            - NORMAL
            - GIFT
        status:
          type: string
          enum:
            - REQUESTED
            - ACCEPTED
            - REJECTED
        message:
          type: string
          minLength: 1
          maxLength: 1024
        createdDate:
          type: string
          format: date-time
        updatedDate:
          type: string
          format: date-time
      required:
        - senderId
        - receiverId
        - message
        - requestType

